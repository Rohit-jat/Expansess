<div class="dashboard-container">
  <h2>Dashboard</h2>
  <div class="stats-card">
    <h3>Total Spent: $<%= totalSpent.toFixed(2) %></h3>
  </div>
  
  <!-- Quick Insights Section -->
  <div class="quick-insights">
    <h3>Quick Insights</h3>
    <div class="insights-grid">
      <div class="insight-card" id="monthlyAverage">
        <h4>Monthly Average</h4>
        <div class="insight-value">Loading...</div>
      </div>
      <div class="insight-card" id="thisMonth">
        <h4>This Month</h4>
        <div class="insight-value">Loading...</div>
      </div>
      <div class="insight-card" id="lastMonth">
        <h4>Last Month</h4>
        <div class="insight-value">Loading...</div>
      </div>
    </div>
  </div>
  
  <div class="quick-actions">
    <a href="/add-expense" class="btn btn-primary">Add New Expense</a>
    <a href="/expenses" class="btn btn-secondary">View All Expenses</a>
    <a href="/charts-chartjs" class="btn btn-secondary">Weekly/Monthly Insights</a>
    <a href="/charts" class="btn btn-secondary">View Analytics</a>
    <a href="/reports" class="btn btn-secondary">Generate Report</a>
  </div>
</div>

<style>
.quick-insights {
  margin: 2rem 0;
  padding: 1.5rem;
  background: #f8f9fa;
  border-radius: 8px;
}

.quick-insights h3 {
  margin: 0 0 1rem 0;
  color: #333;
}

.insights-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 1rem;
}

.insight-card {
  background: white;
  padding: 1rem;
  border-radius: 6px;
  text-align: center;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.insight-card h4 {
  margin: 0 0 0.5rem 0;
  font-size: 0.9rem;
  color: #666;
  text-transform: uppercase;
}

.insight-value {
  font-size: 1.2rem;
  font-weight: bold;
  color: #007bff;
}
</style>

<script>
// Load quick insights data for dashboard
document.addEventListener('DOMContentLoaded', () => {
  loadDashboardInsights();
});

async function loadDashboardInsights() {
  try {
    const response = await fetch('/api/insights/trends?period=monthly', {
      cache: 'no-store',
      headers: {
        'Accept': 'application/json'
      }
    });

    if (!response.ok) {
      throw new Error('Failed to fetch insights data');
    }

    const trendsData = await response.json();
    updateDashboardInsights(trendsData);
  } catch (error) {
    console.error('Error loading dashboard insights:', error);
    // Show error state in insight cards
    document.querySelectorAll('.insight-value').forEach(el => {
      el.textContent = 'Error';
    });
  }
}

function updateDashboardInsights(trendsData) {
  if (!trendsData || trendsData.length === 0) {
    document.querySelectorAll('.insight-value').forEach(el => {
      el.textContent = '$0.00';
    });
    return;
  }

  // Calculate average
  const amounts = trendsData.map(item => item.total);
  const average = amounts.reduce((sum, amount) => sum + amount, 0) / amounts.length;
  
  // Get current and last month data
  const currentDate = new Date();
  const currentMonth = currentDate.getMonth() + 1;
  const currentYear = currentDate.getFullYear();
  const lastMonth = currentMonth === 1 ? 12 : currentMonth - 1;
  const lastMonthYear = currentMonth === 1 ? currentYear - 1 : currentYear;
  
  const thisMonthData = trendsData.find(item => 
    item._id.month === currentMonth && item._id.year === currentYear
  );
  const lastMonthData = trendsData.find(item => 
    item._id.month === lastMonth && item._id.year === lastMonthYear
  );
  
  // Update the cards
  const monthlyAverageEl = document.querySelector('#monthlyAverage .insight-value');
  const thisMonthEl = document.querySelector('#thisMonth .insight-value');
  const lastMonthEl = document.querySelector('#lastMonth .insight-value');
  
  if (monthlyAverageEl) {
    monthlyAverageEl.textContent = `$${average.toFixed(2)}`;
  }
  if (thisMonthEl) {
    thisMonthEl.textContent = thisMonthData ? `$${thisMonthData.total.toFixed(2)}` : '$0.00';
  }
  if (lastMonthEl) {
    lastMonthEl.textContent = lastMonthData ? `$${lastMonthData.total.toFixed(2)}` : '$0.00';
  }
}
</script>